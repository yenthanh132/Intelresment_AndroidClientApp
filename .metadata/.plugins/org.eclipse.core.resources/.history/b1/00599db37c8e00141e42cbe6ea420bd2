package com.cs300.intelresment.data;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import com.cs300.intelresment.web.Downloader;

public class Restaurant {
	public String name, address, telephone;
	public int ID;

	public List<Deal> listDeal = new ArrayList<Deal>();
	public List<Food> listFood = new ArrayList<Food>();
	public List<Table> listTable = new ArrayList<Table>();

	Restaurant() {
		ID = 0;
	}

	Restaurant(int ID) {
		this.ID = ID;
	}

	public boolean getNotification() {

	}

	public Bill getBillByID(int billID) {
		Bill bill = new Bill();
		String data = Downloader.GetData("http://haikhanh.me:1080/bill/" + billID);
		try {
			JSONObject obj = new JSONObject(data);
			bill.ID = billID;
			bill.orderDate = obj.getString("orderDate");
			bill.paymentDate = obj.getString("paymentDate");
			if (!obj.getString("paymentPrice").equals("null"))
				bill.paymentPrice = (float) obj.getDouble("paymentPrice");
			else
				bill.paymentPrice = 0;

			bill.isOnline = obj.getBoolean("isOnline");
			bill.customerName = obj.getString("customerName");
			bill.customerPhone = obj.getString("customerName");
			bill.customerAddress = obj.getString("customerAddress");

			// Get ordered food list
			data = Downloader.GetData("http://haikhanh.me:1080/bill/getFood/" + billID);
			obj = new JSONObject(data);
			JSONArray arr = obj.getJSONArray("listOfFood");
			for (int i = 0; i < arr.length(); ++i) {
				JSONObject obj2 = arr.getJSONObject(i);
				int foodID = obj2.getInt("foodId");
				int foodCount = obj2.getInt("number");
				for (int j = 0; j < listFood.size(); ++j)
					if (foodID == listFood.get(j).ID) {
						// Found the corresponding food
						Food orderedFood = new Food(listFood.get(j));
						orderedFood.count = foodCount;
						bill.listOrderedFood.add(orderedFood);
						break;
					}
			}
		} catch (Exception e) {

		}
		return bill;
	}

	public void addNewBill(Bill bill) {
		if (bill.ID > 0)
			return;
		String path = "http://haikhanh.me:1080/bill/";
		JSONObject dataJSON = new JSONObject();
		try {
			dataJSON.put("paymentPrice", 0);
			dataJSON.put("orderDate", new SimpleDateFormat("MM-dd-yyyy HH:mm:ss").format(Calendar.getInstance().getTime()));
			String retJSON = Downloader.PostData(path, dataJSON.toString());

			JSONObject obj = new JSONObject(retJSON);
			bill.ID = obj.getInt("id");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void addFoodToBill(Bill bill) {
		if (bill.ID == 0)
			return;
		// Delete all the food first
		String path = "http://haikhanh.me:1080/bill/destroyFood/" + bill.ID;
		JSONObject dataJSON = new JSONObject();
		try {
			dataJSON.put("billId", bill.ID);
			Downloader.PostData(path, dataJSON.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}

		// Start adding food
		path = "http://haikhanh.me:1080/bill/addFood/";
		for (int i = 0; i < bill.listOrderedFood.size(); ++i) {
			Food food = bill.listOrderedFood.get(i);
			JSONObject obj = new JSONObject();
			try {
				obj.put("billId", bill.ID);
				obj.put("foodId", food.ID);
				obj.put("number", food.count);
				Downloader.PostData(path, obj.toString());
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
	}

	public void addBillToTable(int tableID, int billID) {
		String path = "http://haikhanh.me:1080/table/" + tableID;
		JSONObject data = new JSONObject();
		try {
			data.put("billId", billID);
			Downloader.PutData(path, data.toString());
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	public void getFoodList() {
		String data = Downloader.GetData("http://haikhanh.me:1080/food/");
		listFood.clear();
		try {
			JSONArray arr = new JSONArray(data);
			for (int i = 0; i < arr.length(); ++i) {
				JSONObject obj = arr.getJSONObject(i);
				Food food = new Food();
				if (!obj.getString("id").equals("null"))
					food.ID = obj.getInt("id");
				else
					food.ID = 0;

				if (!obj.getString("price").equals("null"))
					food.price = obj.getInt("price");
				else
					food.price = 0;

				food.count = 0;
				food.name = obj.getString("name");
				food.description = obj.getString("description");
				food.imageSmallUrl = obj.getString("imageSmall");
				food.imageLargeUrl = obj.getString("imageLarge");

				listFood.add(food);
			}
		} catch (Exception e) {

		}
	}

	public void getTableList() {
		String data = Downloader.GetData("http://haikhanh.me:1080/table");
		listTable.clear();
		try {
			JSONArray arr = new JSONArray(data);
			for (int i = 0; i < arr.length(); ++i) {
				JSONObject obj = arr.getJSONObject(i);
				Table table = new Table();
				if (!obj.getString("billId").equals("null"))
					table.billID = obj.getInt("billId");
				else
					table.billID = 0;

				if (!obj.getString("id").equals("null"))
					table.ID = obj.getInt("id");
				else
					table.ID = 0;

				if (!obj.getString("name").equals("null"))
					table.name = obj.getString("name");
				else
					table.name = "";

				if (!obj.getString("description").equals("null"))
					table.description = obj.getString("description");
				else
					table.description = "";

				listTable.add(table);
			}

		} catch (JSONException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
